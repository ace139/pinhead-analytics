---
import { SEO } from 'astro-seo';

// For .astro pages using <Layout title="..." />
export interface Props {
  title: string;
  description?: string;
  canonical?: string;
  noindex?: boolean;
}

// For MDX pages using this layout via frontmatter
interface MdxLayoutProps {
  frontmatter: {
    title: string;
    description?: string;
    canonical?: string;
    noindex?: boolean;
  };
  // Astro also adds other properties like 'url' to MDX pages
  url: string; // url is typically available for MDX pages
}

// Use a type assertion for Astro.props. This tells TypeScript to expect one of these shapes.
const astroProps = Astro.props as Props | MdxLayoutProps;

let title: string;
let description: string | undefined;
let canonical: string | undefined;
let noindex: boolean = false; // Default to false, so pages are indexed unless specified

const defaultDescription = 'Leading Data & AI Consulting Firm specializing in GenAI and LLM solutions for enterprise transformation.';

// Type guard: Check if 'frontmatter' exists and is an object to determine if it's MdxLayoutProps
if ('frontmatter' in astroProps && typeof astroProps.frontmatter === 'object' && astroProps.frontmatter !== null) {
  // It's an MDX page using frontmatter
  const fm = astroProps.frontmatter;
  if (typeof fm.title !== 'string' || fm.title.trim() === '') {
    throw new Error(`[Layout.astro] MDX Page frontmatter for '${astroProps.url}' is missing a valid 'title'.`);
  }
  title = fm.title;
  description = fm.description || defaultDescription;
  canonical = fm.canonical;
  noindex = fm.noindex ?? false; // Default to false if noindex is undefined or null
} else if ('title' in astroProps && typeof astroProps.title === 'string' && astroProps.title.trim() !== '') {
  // It's an .astro page passing props directly
  title = astroProps.title;
  description = astroProps.description || defaultDescription;
  canonical = astroProps.canonical;
  noindex = astroProps.noindex ?? false; // Default to false if noindex is undefined or null
} else {
  // If neither shape matches or title is invalid/missing
  const pageUrl = 'url' in astroProps ? astroProps.url : Astro.url.pathname;
  throw new Error(
    `[Layout.astro] Page title is missing or invalid for '${pageUrl}'. ` +
    `Ensure a non-empty 'title' is in component props (for .astro pages) or in frontmatter (for .md/.mdx pages).`
  );
}

// At this point, 'title' is guaranteed to be a non-empty string.
---

<!doctype html>
<html lang="en" class="light">
  <head>
    <SEO
      title={title}
      description={description}
      canonical={canonical}
      noindex={noindex}
      openGraph={{
        basic: {
          title: title,
          type: 'website',
          image: '/og-image.png',
        }
      }}
      twitter={{
        creator: '@pinheadanalytics',
        card: 'summary_large_image',
      }}
    />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;500&display=swap" rel="stylesheet">
  </head>
  <body class="bg-primary text-text font-inter">
    <slot />
  </body>
</html>

<style is:global>
  * {
    box-sizing: border-box;
  }
  
  html, body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
  }

  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>